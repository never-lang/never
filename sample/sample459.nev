
record R
{
    x : int;
    a[D] : int;
    [from .. to] : range;
    s [ from_s .. to_s ] : string;
}

enum E { 
    S,
    R { value : R; }
}

func pr_range( [ from .. to ] : range ) -> int
{
    print(from);
    print(to);

    0
}

func pr_R( e : E ) -> int
{
    if let (E::R(r) = e)
    {
        print(r.x);
        print(r.D);

        pr_range( [ r.from .. r.to ] );
        print(r.from_s);
        print(r.to_s);

        for (e in r.s)
        {
            prints(e + "\n")
        }
    };

    0
}

func main() -> int
{
    let ai = [ 1, 2, 3, 4 ] : int;
    let as = [ "one", "two", "three", "four", "five", "six" ] : string;
    let r = E::R( R(1, ai, [ 10 .. 200 ], as[ 1 .. 3 ]) );

    pr_R(r);

    0
}
