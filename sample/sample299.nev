
enum Variant { Int { let value : int; },
               Float { let value : float; },
               Char { let value : char; },
               String { let value : string; } }

func printv ( v : Variant ) -> Variant
{
    match (v)
    {
        Variant::Int(value) -> { print(value); v };
        Variant::Float(value) -> { printf(value); v };
        Variant::Char(value) -> { printc(value); v };
        Variant::String(value) -> { prints(value); v };
    }
}

func main() -> int
{
    let i = 10;
    let f = 10.0;
    let c = 'A';

    printv(Variant::Int(i));
    printv(Variant::Float(f));
    printv(Variant::Char(c)); prints("\n");
    printv(Variant::String("ten")); prints("\n");

    0
}
