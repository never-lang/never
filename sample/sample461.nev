
enum E { 
    S,
    R { x : int; let a[D] : int; [from .. to] : range; s [ from_s .. to_s ] : string; }
}

func pr_array( let a[D] : int ) -> int
{
    for (e in a)
    {
        print(e)
    }
}

func pr_range( [ from .. to ] : range ) -> int
{
    print(from);
    print(to);

    0
}

func pr_R( e : E ) -> int
{
    match e
    {
        E::R(x, a, r, s) -> {
            print(x);

            pr_array(a);
            pr_range(r);

            for (e in s)
            {
                prints(e + "\n")
            }
        };
        E::S -> {
            prints("s\n"); 0
        };
    };

    0
}

func main() -> int
{
    let ai = [ 1, 2, 3, 4 ] : int;
    let as = [ "zero", "one", "two", "three", "four", "five", "six" ] : string;
    let r = E::R(1,
                 ai,
                 [ 10 .. 200 ],
                 as[ 1 .. 3 ]);

    pr_R(r);

    0
}
