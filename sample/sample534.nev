
enum E
{
    ONE       = 1 <<< 0,
    TWO       = E::ONE <<< 1,
    FOUR      = E::TWO <<< 1,
    EIGHT     = E::FOUR <<< 1,
    SIXTEEN   = E::EIGHT <<< 1,
    THIRTYTWO = E::SIXTEEN <<< 1,
    Some { value : int; }
}

func getEight() -> E
{
    E::EIGHT
}

func main() -> int
{
    print(E::ONE);
    print(E::TWO);
    print(E::FOUR);
    print(E::EIGHT);
    print(E::SIXTEEN);
    print(E::THIRTYTWO);

    print(E::ONE ||| E::TWO);
    print(E::ONE ||| E::FOUR);
    print(-E::TWO);
    print(E::ONE <<< 5);

    assert(E::ONE == 1);
    assert(E::TWO == 2);
    assert(E::FOUR == 4);
    assert(E::EIGHT == 8);
    assert(8 == E::EIGHT);
    assert(getEight() == 8);
    assert(8 == getEight());
    assert(getEight() == E::EIGHT);
    assert(E::EIGHT == getEight());
    assert(E::SIXTEEN == 16);
    assert(E::THIRTYTWO == 32);

    assert((E::ONE ||| E::TWO) == 3);
    assert((E::ONE ||| E::FOUR) == 5);
    assert(-E::TWO == -2);
    assert((E::ONE <<< 5) == E::THIRTYTWO);
    assert((E::EIGHT ^^^ E::TWO ^^^ E::TWO) == E::EIGHT);

    0
}
